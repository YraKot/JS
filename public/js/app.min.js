;(function(){
	'use strict';
	
	function playSound(e){
		const audio = document.querySelector(`audio[data-key='${e.keyCode}']`);
		const key = document.querySelector(`.key[data-key='${e.keyCode}']`);
		
		if(!audio) return;
		
		audio.currentTime = 0;
		audio.play();
		
		key.classList.add('playing');
	}
	
	function removeTransition(e) {
		
		if( e.propertyName !== 'transform' ) return;
		this .classList.remove('playing');
		
	}
	
	const keys = document.querySelectorAll('.key');
	
	keys.forEach( key => key.addEventListener('transitionend', removeTransition ));
	
	window.addEventListener('keydown', playSound);
		
}());

;(function(){
	'use strick';

	const handHour = document.querySelector('.hour-hand');
	const handMin = document.querySelector('.min-hand');
	const handSecond = document.querySelector('.second-hand');
	
	function setTime() {

		const now = new Date();
	
		const H = now.getHours(),
			  M = now.getMinutes(),
			  S = now.getSeconds();

		const secDegrees = (( S / 60 ) * 360) + 90;
		handSecond.style.transform = `rotate(${secDegrees}deg)`;

		const minDegrees = (( M / 60 ) * 360) + 90;
		handMin.style.transform = `rotate(${minDegrees}deg)`;
		
		const hourDegrees = (( H / 12 ) * 360) + 90;
		handHour.style.transform = `rotate(${hourDegrees}deg)`;

		[handHour, handMin, handSecond].forEach(el => el.style.transition = (S === 0) ? 'none' : null );
		// console.log(h);
		// console.log(m);
		// console.log(secDegrees);
	}

	setInterval( setTime, 1000);

	// setTime();

}());

 ;(function(){
	const inputs = document.querySelectorAll('.controls input');

	function handelUpdate() {
		const suffix = this.dataset.sizing || '';
		document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix );
		 console.log(this.name)
	}

	inputs.forEach(input => input.addEventListener('change', handelUpdate));
	inputs.forEach(input => input.addEventListener('mousemove', handelUpdate));

 }());

;(function(){
	'use strick';
	
	// ## Array Cardio Day 1
	const inventors = [
		{ first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },
		{ first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },
		{ first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },
		{ first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },
		{ first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },
		{ first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },
		{ first: 'Max', last: 'Planck', year: 1858, passed: 1947 },
		{ first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },
		{ first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },
		{ first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },
		{ first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },
		{ first: 'Hanna', last: 'Hammarstr√∂m', year: 1829, passed: 1909 }
	];

	const people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry', 'Beethoven, Ludwig', 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert', 'Benenson, Peter', 'Ben-Gurion, David', 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester', 'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric', 'Bergman, Ingmar', 'Berio, Luciano', 'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi', 'Berry, Halle', 'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose', 'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black, Elk', 'Blair, Robert', 'Blair, Tony', 'Blake, William'];
	
	// Array.prototype.filter()
	// 1. Filter the list of inventors for those who were born in the 1500's
	
	inventors

    // Array.prototype.map()
    // 2. Give us an array of the inventors' first and last names
    // Array.prototype.sort()
    // 3. Sort the inventors by birthdate, oldest to youngest
    // Array.prototype.reduce()
    // 4. How many years did all the inventors live?
    // 5. Sort the inventors by years lived
    // 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name
    // https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris
    // 7. sort Exercise
    // Sort the people alphabetically by last name
    // 8. Reduce Exercise
    // Sum up the instances of each of these
	
	const data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];


}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAxX2RyYW1raXQuanMiLCIwMl9jbG9jay5qcyIsIjAzX3ZhcmlhYmxlcy5qcyIsIjA0X2FycmF5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbigpe1xuXHQndXNlIHN0cmljdCc7XG5cdFxuXHRmdW5jdGlvbiBwbGF5U291bmQoZSl7XG5cdFx0Y29uc3QgYXVkaW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBhdWRpb1tkYXRhLWtleT0nJHtlLmtleUNvZGV9J11gKTtcblx0XHRjb25zdCBrZXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAua2V5W2RhdGEta2V5PScke2Uua2V5Q29kZX0nXWApO1xuXHRcdFxuXHRcdGlmKCFhdWRpbykgcmV0dXJuO1xuXHRcdFxuXHRcdGF1ZGlvLmN1cnJlbnRUaW1lID0gMDtcblx0XHRhdWRpby5wbGF5KCk7XG5cdFx0XG5cdFx0a2V5LmNsYXNzTGlzdC5hZGQoJ3BsYXlpbmcnKTtcblx0fVxuXHRcblx0ZnVuY3Rpb24gcmVtb3ZlVHJhbnNpdGlvbihlKSB7XG5cdFx0XG5cdFx0aWYoIGUucHJvcGVydHlOYW1lICE9PSAndHJhbnNmb3JtJyApIHJldHVybjtcblx0XHR0aGlzIC5jbGFzc0xpc3QucmVtb3ZlKCdwbGF5aW5nJyk7XG5cdFx0XG5cdH1cblx0XG5cdGNvbnN0IGtleXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcua2V5Jyk7XG5cdFxuXHRrZXlzLmZvckVhY2goIGtleSA9PiBrZXkuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHJlbW92ZVRyYW5zaXRpb24gKSk7XG5cdFxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHBsYXlTb3VuZCk7XG5cdFx0XG59KCkpO1xuIiwiOyhmdW5jdGlvbigpe1xuXHQndXNlIHN0cmljayc7XG5cblx0Y29uc3QgaGFuZEhvdXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaG91ci1oYW5kJyk7XG5cdGNvbnN0IGhhbmRNaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWluLWhhbmQnKTtcblx0Y29uc3QgaGFuZFNlY29uZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWNvbmQtaGFuZCcpO1xuXHRcblx0ZnVuY3Rpb24gc2V0VGltZSgpIHtcblxuXHRcdGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG5cdFxuXHRcdGNvbnN0IEggPSBub3cuZ2V0SG91cnMoKSxcblx0XHRcdCAgTSA9IG5vdy5nZXRNaW51dGVzKCksXG5cdFx0XHQgIFMgPSBub3cuZ2V0U2Vjb25kcygpO1xuXG5cdFx0Y29uc3Qgc2VjRGVncmVlcyA9ICgoIFMgLyA2MCApICogMzYwKSArIDkwO1xuXHRcdGhhbmRTZWNvbmQuc3R5bGUudHJhbnNmb3JtID0gYHJvdGF0ZSgke3NlY0RlZ3JlZXN9ZGVnKWA7XG5cblx0XHRjb25zdCBtaW5EZWdyZWVzID0gKCggTSAvIDYwICkgKiAzNjApICsgOTA7XG5cdFx0aGFuZE1pbi5zdHlsZS50cmFuc2Zvcm0gPSBgcm90YXRlKCR7bWluRGVncmVlc31kZWcpYDtcblx0XHRcblx0XHRjb25zdCBob3VyRGVncmVlcyA9ICgoIEggLyAxMiApICogMzYwKSArIDkwO1xuXHRcdGhhbmRIb3VyLnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGUoJHtob3VyRGVncmVlc31kZWcpYDtcblxuXHRcdFtoYW5kSG91ciwgaGFuZE1pbiwgaGFuZFNlY29uZF0uZm9yRWFjaChlbCA9PiBlbC5zdHlsZS50cmFuc2l0aW9uID0gKFMgPT09IDApID8gJ25vbmUnIDogbnVsbCApO1xuXHRcdC8vIGNvbnNvbGUubG9nKGgpO1xuXHRcdC8vIGNvbnNvbGUubG9nKG0pO1xuXHRcdC8vIGNvbnNvbGUubG9nKHNlY0RlZ3JlZXMpO1xuXHR9XG5cblx0c2V0SW50ZXJ2YWwoIHNldFRpbWUsIDEwMDApO1xuXG5cdC8vIHNldFRpbWUoKTtcblxufSgpKTtcbiIsIiA7KGZ1bmN0aW9uKCl7XG5cdGNvbnN0IGlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cm9scyBpbnB1dCcpO1xuXG5cdGZ1bmN0aW9uIGhhbmRlbFVwZGF0ZSgpIHtcblx0XHRjb25zdCBzdWZmaXggPSB0aGlzLmRhdGFzZXQuc2l6aW5nIHx8ICcnO1xuXHRcdGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke3RoaXMubmFtZX1gLCB0aGlzLnZhbHVlICsgc3VmZml4ICk7XG5cdFx0IGNvbnNvbGUubG9nKHRoaXMubmFtZSlcblx0fVxuXG5cdGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGhhbmRlbFVwZGF0ZSkpO1xuXHRpbnB1dHMuZm9yRWFjaChpbnB1dCA9PiBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kZWxVcGRhdGUpKTtcblxuIH0oKSk7XG4iLCI7KGZ1bmN0aW9uKCl7XG5cdCd1c2Ugc3RyaWNrJztcblx0XG5cdC8vICMjIEFycmF5IENhcmRpbyBEYXkgMVxuXHRjb25zdCBpbnZlbnRvcnMgPSBbXG5cdFx0eyBmaXJzdDogJ0FsYmVydCcsIGxhc3Q6ICdFaW5zdGVpbicsIHllYXI6IDE4NzksIHBhc3NlZDogMTk1NSB9LFxuXHRcdHsgZmlyc3Q6ICdJc2FhYycsIGxhc3Q6ICdOZXd0b24nLCB5ZWFyOiAxNjQzLCBwYXNzZWQ6IDE3MjcgfSxcblx0XHR7IGZpcnN0OiAnR2FsaWxlbycsIGxhc3Q6ICdHYWxpbGVpJywgeWVhcjogMTU2NCwgcGFzc2VkOiAxNjQyIH0sXG5cdFx0eyBmaXJzdDogJ01hcmllJywgbGFzdDogJ0N1cmllJywgeWVhcjogMTg2NywgcGFzc2VkOiAxOTM0IH0sXG5cdFx0eyBmaXJzdDogJ0pvaGFubmVzJywgbGFzdDogJ0tlcGxlcicsIHllYXI6IDE1NzEsIHBhc3NlZDogMTYzMCB9LFxuXHRcdHsgZmlyc3Q6ICdOaWNvbGF1cycsIGxhc3Q6ICdDb3Blcm5pY3VzJywgeWVhcjogMTQ3MywgcGFzc2VkOiAxNTQzIH0sXG5cdFx0eyBmaXJzdDogJ01heCcsIGxhc3Q6ICdQbGFuY2snLCB5ZWFyOiAxODU4LCBwYXNzZWQ6IDE5NDcgfSxcblx0XHR7IGZpcnN0OiAnS2F0aGVyaW5lJywgbGFzdDogJ0Jsb2RnZXR0JywgeWVhcjogMTg5OCwgcGFzc2VkOiAxOTc5IH0sXG5cdFx0eyBmaXJzdDogJ0FkYScsIGxhc3Q6ICdMb3ZlbGFjZScsIHllYXI6IDE4MTUsIHBhc3NlZDogMTg1MiB9LFxuXHRcdHsgZmlyc3Q6ICdTYXJhaCBFLicsIGxhc3Q6ICdHb29kZScsIHllYXI6IDE4NTUsIHBhc3NlZDogMTkwNSB9LFxuXHRcdHsgZmlyc3Q6ICdMaXNlJywgbGFzdDogJ01laXRuZXInLCB5ZWFyOiAxODc4LCBwYXNzZWQ6IDE5NjggfSxcblx0XHR7IGZpcnN0OiAnSGFubmEnLCBsYXN0OiAnSGFtbWFyc3Ryw7ZtJywgeWVhcjogMTgyOSwgcGFzc2VkOiAxOTA5IH1cblx0XTtcblxuXHRjb25zdCBwZW9wbGUgPSBbJ0JlY2ssIEdsZW5uJywgJ0JlY2tlciwgQ2FybCcsICdCZWNrZXR0LCBTYW11ZWwnLCAnQmVkZG9lcywgTWljaycsICdCZWVjaGVyLCBIZW5yeScsICdCZWV0aG92ZW4sIEx1ZHdpZycsICdCZWdpbiwgTWVuYWNoZW0nLCAnQmVsbG9jLCBIaWxhaXJlJywgJ0JlbGxvdywgU2F1bCcsICdCZW5jaGxleSwgUm9iZXJ0JywgJ0JlbmVuc29uLCBQZXRlcicsICdCZW4tR3VyaW9uLCBEYXZpZCcsICdCZW5qYW1pbiwgV2FsdGVyJywgJ0Jlbm4sIFRvbnknLCAnQmVubmluZ3RvbiwgQ2hlc3RlcicsICdCZW5zb24sIExlYW5hJywgJ0JlbnQsIFNpbGFzJywgJ0JlbnRzZW4sIExsb3lkJywgJ0JlcmdlciwgUmljJywgJ0JlcmdtYW4sIEluZ21hcicsICdCZXJpbywgTHVjaWFubycsICdCZXJsZSwgTWlsdG9uJywgJ0JlcmxpbiwgSXJ2aW5nJywgJ0Jlcm5lLCBFcmljJywgJ0Jlcm5oYXJkLCBTYW5kcmEnLCAnQmVycmEsIFlvZ2knLCAnQmVycnksIEhhbGxlJywgJ0JlcnJ5LCBXZW5kZWxsJywgJ0JldGhlYSwgRXJpbicsICdCZXZhbiwgQW5ldXJpbicsICdCZXZlbCwgS2VuJywgJ0JpZGVuLCBKb3NlcGgnLCAnQmllcmNlLCBBbWJyb3NlJywgJ0Jpa28sIFN0ZXZlJywgJ0JpbGxpbmdzLCBKb3NoJywgJ0Jpb25kbywgRnJhbmsnLCAnQmlycmVsbCwgQXVndXN0aW5lJywgJ0JsYWNrLCBFbGsnLCAnQmxhaXIsIFJvYmVydCcsICdCbGFpciwgVG9ueScsICdCbGFrZSwgV2lsbGlhbSddO1xuXHRcblx0Ly8gQXJyYXkucHJvdG90eXBlLmZpbHRlcigpXG5cdC8vIDEuIEZpbHRlciB0aGUgbGlzdCBvZiBpbnZlbnRvcnMgZm9yIHRob3NlIHdobyB3ZXJlIGJvcm4gaW4gdGhlIDE1MDAnc1xuXHRcblx0aW52ZW50b3JzXG5cbiAgICAvLyBBcnJheS5wcm90b3R5cGUubWFwKClcbiAgICAvLyAyLiBHaXZlIHVzIGFuIGFycmF5IG9mIHRoZSBpbnZlbnRvcnMnIGZpcnN0IGFuZCBsYXN0IG5hbWVzXG4gICAgLy8gQXJyYXkucHJvdG90eXBlLnNvcnQoKVxuICAgIC8vIDMuIFNvcnQgdGhlIGludmVudG9ycyBieSBiaXJ0aGRhdGUsIG9sZGVzdCB0byB5b3VuZ2VzdFxuICAgIC8vIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKVxuICAgIC8vIDQuIEhvdyBtYW55IHllYXJzIGRpZCBhbGwgdGhlIGludmVudG9ycyBsaXZlP1xuICAgIC8vIDUuIFNvcnQgdGhlIGludmVudG9ycyBieSB5ZWFycyBsaXZlZFxuICAgIC8vIDYuIGNyZWF0ZSBhIGxpc3Qgb2YgQm91bGV2YXJkcyBpbiBQYXJpcyB0aGF0IGNvbnRhaW4gJ2RlJyBhbnl3aGVyZSBpbiB0aGUgbmFtZVxuICAgIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0NhdGVnb3J5OkJvdWxldmFyZHNfaW5fUGFyaXNcbiAgICAvLyA3LiBzb3J0IEV4ZXJjaXNlXG4gICAgLy8gU29ydCB0aGUgcGVvcGxlIGFscGhhYmV0aWNhbGx5IGJ5IGxhc3QgbmFtZVxuICAgIC8vIDguIFJlZHVjZSBFeGVyY2lzZVxuICAgIC8vIFN1bSB1cCB0aGUgaW5zdGFuY2VzIG9mIGVhY2ggb2YgdGhlc2Vcblx0XG5cdGNvbnN0IGRhdGEgPSBbJ2NhcicsICdjYXInLCAndHJ1Y2snLCAndHJ1Y2snLCAnYmlrZScsICd3YWxrJywgJ2NhcicsICd2YW4nLCAnYmlrZScsICd3YWxrJywgJ2NhcicsICd2YW4nLCAnY2FyJywgJ3RydWNrJyBdO1xuXG5cbn0oKSk7XG4iXX0=
